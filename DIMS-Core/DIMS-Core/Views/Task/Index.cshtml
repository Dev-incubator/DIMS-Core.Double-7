@model IEnumerable<VTaskViewModel>

@{
    ViewData["Title"] = "VTasks";
}

<div class="modal fade" id="task-modal">
</div>

<div class="table-responsive text-center" id="task-table">
    <div class="d-flex justify-content-sm-between">
        <h2 class="text-center my-4">Tasks</h2>
        <div class="my-4 mr-1">
            <button type="button" class="btn btn-primary btn-create">Create</button>
        </div>
    </div>
    <table class="table table-bordered">
        <thead class="thead-light">
        <tr>
            <th scope="col">#</th>
            <th scope="col">Task name</th>
            <th scope="col">Description</th>
            <th scope="col">Start date</th>
            <th scope="col">Deadline Date</th>
            <th scope="col">Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>
                    @task.TaskId
                </td>
                <td>
                    <a class="btn-details" data-id="@task.TaskId" href="#!">@task.Name</a>
                </td>
                <td>
                    @task.Description
                </td>
                <td>
                    @task.StartDate
                </td>
                <td>
                    @task.DeadlineDate
                </td>
                <td>
                    <button class="btn btn-warning btn-edit" style="width: 45%" data-id="@task.TaskId">Edit</button>
                    <button class="btn btn-danger btn-delete" style="width: 45%" data-id="@task.TaskId">Delete</button>
                </td>
            </tr>
        }
        </tbody>
    </table>
</div>

@section Scripts
{
    @{ await Html.RenderPartialAsync("ModalScripts/_TaskScripts"); }
}